---
- name: Playbook to create a VMware vm from a custom template
  hosts: localhost
  become: false
  gather_facts: false

  vars:
    my_vms_from_template:
      - my_vcenter_vm_name: mafalda
        # my_template_name: "{{ flavor['rhel'].my_template_name }}"
        my_template_name: "custom-rhel-template"
        my_vcenter_datacenter_name: bcl
        my_vcenter_vm_parent_folder_name: /vm/vms
        my_vcenter_cluster_name: bcl-cluster
      - my_vcenter_vm_name: asterix
        # my_template_name: "{{ flavor['rhel'].my_template_name }}"
        my_template_name: "custom-rhel-template"
        my_vcenter_datacenter_name: bcl
        my_vcenter_vm_parent_folder_name: /vm/vms
        my_vcenter_cluster_name: bcl-cluster
      - my_vcenter_vm_name: obelix
        # my_template_name: "{{ flavor['win'].my_template_name }}"
        my_template_name: "custom_windows19-template"
        my_vcenter_datacenter_name: bcl
        my_vcenter_vm_parent_folder_name: /vm/vms
        my_vcenter_cluster_name: bcl-cluster

  tasks:
    - name: Clone the template
      community.vmware.vmware_guest:
        hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
        username: "{{ lookup('env', 'VMWARE_USER') }}"
        password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
        validate_certs: false
        name: "{{ item.my_vcenter_vm_name }}"
        template: "{{ item.my_template_name }}"
        datacenter: "{{ item.my_vcenter_datacenter_name }}"
        folder: "{{ item.my_vcenter_vm_parent_folder_name }}"
        convert: thin
        state: poweredon
        cluster: "{{ item.my_vcenter_cluster_name }}"
        wait_for_ip_address: true
      loop: "{{ my_vms_from_template }}"
      ## loop: "{{ lookup('file', 'machines_def_vmware.yml') | from_yaml }}"
      register: my_vms_created

    - name: Print result of vm creation
      ansible.builtin.debug:
        var: my_vms_created
      when: debug | default('false') | bool

    - name: Print add Hosts to inventory parameters
      ansible.builtin.debug:
        msg: |
          name: "{{ item.instance.hw_name }}"
          ansible_host: "{{ item.instance.ipv4 }}"
          groups: "{{ item.instance.hw_guest_id }}"
      loop: "{{ my_vms_created.results }}"
      when: debug | default('false') | bool

    - name: Add RHEL Hosts to inventory
      ansible.builtin.add_host:
        name: "{{ item.instance.hw_name }}"
        ansible_host: "{{ item.instance.ipv4 }}"
        groups: 
          - "{{ item.instance.hw_guest_id }}"
          - "guestvm"
        # ansible_user:
        # ansible_password:
      loop: "{{ my_vms_created.results }}"
      when:
        - awx_inventory_name is not defined
        - item.instance.hw_guest_id == "rhel9_64Guest"

    - name: Add WIN Hosts to cmd-line inventory
      ansible.builtin.add_host:
        name: "{{ item.instance.hw_name }}"
        ansible_host: "{{ item.instance.ipv4 }}"
        ansible_connection: winrm
        ansible_winrm_transport: basic
        groups: 
          - "{{ item.instance.hw_guest_id }}"
          - "guestvm"
        # ansible_user:
        # ansible_password:
      loop: "{{ my_vms_created.results }}"
      when:
        - awx_inventory_name is not defined
        - item.instance.hw_guest_id == "windows2019srv_64Guest"

    - name: Add hosts to controller inventory
      ansible.controller.host:
        validate_certs: false
        inventory: "{{ awx_inventory_name }}"
        name: "{{ item.instance.hw_name }}"
        enabled: true
        state: present
        variables:
          ansible_host: "{{ item.instance.ipv4 }}"
          group_name: "{{ item.instance.hw_guest_id }}"
      when:
        - awx_inventory_name is defined
      loop: "{{ my_vms_created.results }}"

    - name: Create RHEL host-groups
      # will create same group more than once...
      ansible.controller.group:
        validate_certs: false
        inventory: "{{ awx_inventory_name }}"
        name: "{{ item.instance.hw_guest_id }}"
        state: present
      delegate_to: localhost
      when:
        - awx_inventory_name is defined
        - item.instance.hw_guest_id == "rhel9_64Guest"
      loop: "{{ my_vms_created.results }}"

    - name: Create WIN host-groups
      # will create same group more than once...
      ansible.controller.group:
        validate_certs: false
        inventory: "{{ awx_inventory_name }}"
        name: "{{ item.instance.hw_guest_id }}"
        state: present
        variables:
          ansible_connection: winrm
          ansible_winrm_transport: basic
      delegate_to: localhost
      when:
        - awx_inventory_name is defined
        - item.instance.hw_guest_id == "windows2019srv_64Guest"
      loop: "{{ my_vms_created.results }}"

    - name: Create guestvm host-group
      # will create same group more than once...
      ansible.controller.group:
        validate_certs: false
        inventory: "{{ awx_inventory_name }}"
        name: "guestvm"
        state: present
      delegate_to: localhost
      when:
        - awx_inventory_name is defined

    - name: Add hosts to groups
      ansible.controller.group:
        validate_certs: false
        inventory: "{{ awx_inventory_name }}"
        name: "{{ item.instance.hw_guest_id }}"
        hosts:
          - "{{ item.instance.hw_name }}"
        preserve_existing_hosts: true
        # preserve_existing_children: True
        state: present
      delegate_to: localhost
      when: awx_inventory_name is defined
      loop: "{{ my_vms_created.results }}"

    - name: Add hosts to group guestvm
      ansible.controller.group:
        validate_certs: false
        inventory: "{{ awx_inventory_name }}"
        name: "guestvm"
        hosts:
          - "{{ item.instance.hw_name }}"
        preserve_existing_hosts: true
        # preserve_existing_children: True
        state: present
      delegate_to: localhost
      when: awx_inventory_name is defined
      loop: "{{ my_vms_created.results }}"
