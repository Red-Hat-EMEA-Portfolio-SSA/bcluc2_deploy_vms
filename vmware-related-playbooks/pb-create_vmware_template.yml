########################################################################
#
# The aim of this playbook is to create a VMware template out of an custom RHEL ISO image.
# We need to follow several steps before we can achieve that:
#   1. Boot a VM from a iso image in cdrom (that iso needs to be configured to run unattended installation, typically using kickstart)
#   2. Optional: access to the VM and apply changes, maybe we want to install some packages or apply some configuration
#   3. Poweroff virtual machine (thoretically there is no need but it's safer and consume less CPU/memory when taking the snapshot)
#   4. Create template from virtual machine
#
########################################################################
---
- name: Playbook to create a VMware template from a custom iso image
  hosts: localhost
  become: true

  tasks:

    - name: Get DS folder
      vmware.vmware_rest.vcenter_folder_info:
        #folders: group-s6
        #names: WorkloadDatastore
        type: "DATASTORE"
      register: my_ds_folder

    - name: Show list of DS folders
      ansible.builtin.debug:
        var: my_ds_folder

    #- name: Get id of child folder
    #  vmware.vmware_rest.vcenter_folder_info:
    #    parent_folders: group-v47
    #  register: my_folder
#
    #- name: Show list of child folders
    #  ansible.builtin.debug:
    #    var: my_folder
#
    #- name: Build a list of all the clusters
    #  vmware.vmware_rest.vcenter_cluster_info:
    #  register: all_the_clusters
#
    #- name: Show list of clusters
    #  ansible.builtin.debug:
    #    var: all_the_clusters
#
    #- name: Build a list of all the datastores
    #  vmware.vmware_rest.vcenter_datastore_info:
    #    names: WorkloadDatastore
    #  register: all_the_datastores
#
    #- name: Show list of datastores
    #  ansible.builtin.debug:
    #    var: all_the_datastores
#
    - name: Boot virtual machine from our custom ISO image in CDROM
      vmware.vmware_rest.vcenter_vm:
        placement:
          cluster: "{{ my_vmware_cluster }}"
          datastore: "{{ my_vmware_datastore }}"
          folder: "{{ my_vmware_folder }}"
          #resource_pool: "{{ my_vmware_resource_pool }}"
        name: temporary_vm_do_not_delete
        guest_OS: RHEL_9_64
        hardware_version: VMX_19
        cpu:
          count: "{{ my_template_cpu_count }}"
        memory:
          hot_add_enabled: true
          size_MiB: "{{ my_template_memory_mib }}"
        cdroms:
          - backing:
              iso_file: "{{ my_iso_file_path }}"
              type: ISO_FILE
        boot_devices :
          - type: CDROM
        disks:
          - type: SATA
            new_vmdk:
              #name: template_disk
              capacity: "{{ my_template_disk_capacity_bytes }}"
        #nics:
        #  - backing:
        #      type: STANDARD_PORTGROUP
        #      network: "{{ lookup('vmware.vmware_rest.network_moid', '/my_dc/network/VM Network') }}"