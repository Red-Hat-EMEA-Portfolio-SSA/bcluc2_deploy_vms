---
- name: Playbook to create a VMware vm from a custom template
  hosts: localhost
  become: false
  gather_facts: false

  vars:

    my_vcenter_datacenter_name: SDDC-Datacenter
    my_vcenter_cluster_name: Cluster-1
    my_vcenter_datastore_name: WorkloadDatastore
    my_vcenter_vm_parent_folder_name: Workloads
    my_content_library_name: this-is-just-a-test
    my_template_name: rhel-template
    
  tasks:

# https://github.com/ansible-collections/vmware.vmware_rest/issues/148

# network.addresses.private_man | selectattr("type", "equalto", "fixed")

    - name: Get id of child folder
      vmware.vmware_rest.vcenter_folder_info:
        parent_folders: "{{ lookup('vmware.vmware_rest.folder_moid', '/{{ my_vcenter_datacenter_name }}/vm/Workloads') }}"
      register: my_folder

    - name: Show list of child folders
      ansible.builtin.debug:
        var: my_folder.value[0].folder

    - name: List all Local Content Library
      vmware.vmware_rest.content_locallibrary_info:
      register: all_content_libraries

    - debug:
        var: all_content_libraries.value

    - name: filter our content library
      set_fact:
        my_content_library: "{{ all_content_libraries.value | selectattr('name', 'equalto', my_content_library_name) }}"

    - debug:
        var: my_content_library[0].id

    - name: Get the list of items of the library
      register: lib_items
      vmware.vmware_rest.content_library_item_info:
        library_id: '{{ my_content_library[0].id }}'

    - name: Use the name to identify the item
      set_fact:
        my_template_item: "{{ lib_items.value | selectattr('name', 'equalto', my_template_name) }}"
    
    - debug:
        var: my_template_item[0].id

    - name: Deploy a new VM based on the template
      vmware.vmware_rest.vcenter_vmtemplate_libraryitems:
        name: vm-from-template
        library: '{{ my_content_library[0].id }}'
        template_library_item: '{{ my_template_item[0].id }}'
        placement:
          cluster: "{{ lookup('vmware.vmware_rest.cluster_moid', '/{{ my_vcenter_datacenter_name }}/host/{{ my_vcenter_cluster_name }}') }}"
          datastore: "{{ lookup('vmware.vmware_rest.datastore_moid', '/{{ my_vcenter_datacenter_name }}/datastore/{{ my_vcenter_datastore_name }}') }}"
          folder: "{{ my_folder.value[0].folder }}"
        state: deploy