---
- name: Playbook to create a VMware template from a custom iso image
  hosts: localhost
  become: false
  gather_facts: false

  vars:

    # Vars created by VMware admin

    my_vcenter_datacenter_name: "bcl" # already in place
    my_vcenter_cluster_name: "bcl-cluster" # already in place
    my_vcenter_datastore_name: "datastore1 (1)" # already in place
    my_vcenter_virtual_switch_name: "DSwitch-test" # vmc-hostswitch # already in place
    my_vcenter_port_segment_name: "DPortGroup-test" # already in place
    my_vcenter_folder_name: vms # create?
    # my_vcenter_vm_parent_folder_name: vms # create?
    # my_vcenter_vm_child_folder_name: sandbox-6kmgg # should we work without parent folder
    my_content_library_name: my_library_on_datastore # create
    my_template_name: custom-windows19-template # create

    # Vars  related to the template

    my_template_cpu_count: 4
    my_template_memory_mib: 8192
    my_template_disk_capacity_gb: 30
    my_iso_file_path: "[datastore1 (1)] ISO Files/my_custom_rhel92.iso"

  tasks:

    - name: Look for MOID of VM called _temporary_vm_do_not_delete
      register: my_vm
      vmware.vmware_rest.vcenter_vm_info:
        filter_names:
          - _temporary_vm_do_not_delete

    - name: Power off VM
      vmware.vmware_rest.vcenter_vm_power:
        state: stop
        vm: "{{ my_vm.value[0].vm }}"

    - name: List the cdrom devices on the guest
      vmware.vmware_rest.vcenter_vm_hardware_cdrom_info:
        vm: '{{ my_vm.value[0].vm }}'
      register: cdrom_template_vm

    - debug:
        msg: "{{ cdrom_template_vm.value[0] }}"

    - name: Detach CDROM from VM
      vmware.vmware_rest.vcenter_vm_hardware_cdrom:
        vm: '{{ my_vm.value[0].vm }}'
        cdrom: "{{ cdrom_template_vm.value[0] }}"
        state: absent

#    - name: Create a content library based on a DataStore
#      vmware.vmware_rest.content_locallibrary:
#        name: "{{ my_content_library_name }}"
#        description: automated
#        publish_info:
#          published: true
#          authentication_method: NONE
#        storage_backings:
#          - datastore_id: "{{ lookup('vmware.vmware_rest.datastore_moid', '/{{ my_vcenter_datacenter_name }}/datastore/{{ my_vcenter_datastore_name }}') }}"
#            type: DATASTORE
#        state: present
#
#    - name: List all Local Content Library
#      register: all_content_libraries
#      vmware.vmware_rest.content_locallibrary_info:
#
#    - name: Filter out content library id
#      ansible.builtin.set_fact:
#        my_content_library: "{{ all_content_libraries.value | selectattr('name', 'equalto', my_content_library_name) }}"
#
#    - name: Create a template from VM in the library
#      vmware.vmware_rest.vcenter_vmtemplate_libraryitems:
#        name: "{{ my_template_name }}"
#        library: '{{ my_content_library[0].id }}'
#        source_vm: '{{ my_vm.value[0].vm }}'
#        placement:
#          cluster: "{{ lookup('vmware.vmware_rest.cluster_moid', '/{{ my_vcenter_datacenter_name }}/host/{{ my_vcenter_cluster_name }}') }}"
#          folder: "{{ lookup('vmware.vmware_rest.folder_moid', '/{{ my_vcenter_datacenter_name }}/vm/{{ my_vcenter_folder_name }}') }}"
#
#    - name: Delete VM
#      vmware.vmware_rest.vcenter_vm:
#        vm: '{{ my_vm.value[0].vm }}'
#        state: absent