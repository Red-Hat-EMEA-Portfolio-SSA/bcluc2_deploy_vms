---
- name: Mount installation ISO read-only
  become: true
  ansible.builtin.mount:
    path: "{{ my_mnt_dir }}"
    src: "{{ my_original_iso_full_filename }}"
    fstype: udf
    opts: ro
    state: mounted

- name: Create a working directory if it does not exist
  ansible.builtin.file:
    path: "{{ my_working_dir }}"
    state: directory

- name: Copy ISO content to working directory
  ansible.builtin.copy:
    src: "{{ my_mnt_dir }}/"
    dest: "{{ my_working_dir }}/"
    remote_src: true
    mode: "0755"

- name: Unmount original ISO
  become: true
  ansible.builtin.mount:
    path: "{{ my_mnt_dir }}"
    state: unmounted

- name: Create autounattend.xml file from template
  become: true
  ansible.builtin.template:
    src: autounattend.xml.j2
    dest: "{{ my_working_dir }}/autounattend.xml"

# - name: Copy autounattend.xml file from role
#   become: true
#   ansible.builtin.copy:
#     src: files/autounattend.xml
#     dest: "{{ my_working_dir }}/autounattend.xml"

- name: Remove unnecessary files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ my_working_dir }}/efi/microsoft/boot/efisys.bin"
    - "{{ my_working_dir }}/efi/microsoft/boot/cdboot.efi"

- name: Rename files
  ansible.builtin.copy:
    remote_src: true
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - src: "{{ my_working_dir }}/efi/microsoft/boot/efisys_noprompt.bin"
      dest: "{{ my_working_dir }}/efi/microsoft/boot/efisys.bin"
    - src: "{{ my_working_dir }}/efi/microsoft/boot/cdboot_noprompt.efi"
      dest: "{{ my_working_dir }}/efi/microsoft/boot/cdboot.efi"

- name: Generate ISO from the 'windows_iso' directory 
  ansible.builtin.command: >
    genisoimage -no-emul-boot -b "boot/etfsboot.com" -boot-load-size 8
    -eltorito-alt-boot -no-emul-boot -e "efi/microsoft/boot/efisys.bin" 
    -boot-load-size 1 -iso-level 4 -o {{ my_custom_iso }} .
  args:
    chdir: "{{ my_working_dir }}"
#-allow-limited-size

- name: Implant md5 to ISO file
  become: true
  ansible.builtin.shell: "implantisomd5 {{ my_custom_iso }}"

- name: Remove workingdir with ISO content
  become: true
  loop:
    - "{{ my_working_dir }}"
    - "{{ my_mnt_dir }}"
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
